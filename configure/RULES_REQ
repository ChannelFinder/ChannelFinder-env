

es_RULES_NAMES:=esdeb esrpm esmac 
install_es_RULES:=$(addprefix install., $(es_RULES_NAMES))
setup_es_RULES:=$(addprefix setup., $(es_RULES_NAMES))
remove_es_RULES:=$(addprefix remove., $(es_RULES_NAMES))

.PHONY: clean.conf.es conf.es start.es status.es restart.es  stop.es disable.es mapping mapping.clean mapping.settings conf.es.show

#https://www.elastic.co/guide/en/elasticsearch/reference/current/release-notes-8.2.0.html
ES_NAME:=elasticsearch
ES_VER:=8.2.0
ES_FILE:=$(ES_NAME)-$(ES_VER)
ES_DEB:=$(ES_FILE)-amd64.deb
ES_RPM:=$(ES_FILE)-x86_64.rpm
ES_MAC:=$(ES_FILE)-darwin-aarch64.tar.gz


# Debian 11
setup.esdeb: install.esdeb enable.es

setup.esrpm: install.esrpm enable.es

setup.esmac: install.esmac


clean.conf.es:
	$(QUIET) rm -f $(CF_SITE_TEMPLATE_PATH)/01.CF_ES_JVMS.options

$(CF_ES_JAVA_OPTS): clean.conf.es
	$(QUIET)echo "$@" >> $(CF_SITE_TEMPLATE_PATH)/01.CF_ES_JVMS.options 

## Is this only way? 
conf.es: $(CF_ES_JAVA_OPTS)
	$(QUIET)$(SUDO) $(INSTALL) -p -m 660 $(CF_SITE_TEMPLATE_PATH)/01.CF_ES_JVMS.options $(CF_ES_CONF_PATH)/jvm.options.d/
	$(QUIET)$(SUDO) sed -i~ 's/^xpack.security.enabled:.*/xpack.security.enabled: $(CF_ES_XPACK_SECURITY)/g' $(CF_ES_CONF_PATH)/elasticsearch.yml 

conf.es.show: 
	$(SUDO) cat -b $(CF_ES_CONF_PATH)/jvm.options.d/01.CF_ES_JVMS.options
	$(SUDO) cat -b $(CF_ES_CONF_PATH)/elasticsearch.yml 

install.esdeb:
	$(QUIET) wget -c https://artifacts.elastic.co/downloads/elasticsearch/$(ES_DEB)
	$(QUIET)$(SUDO) dpkg -i ./$(ES_DEB)

remove.esdeb:
	$(QUIET)$(SUDO) apt purge elasticsearch

# Rocky 8
install.esrpm:
	$(QUIET) wget -c https://artifacts.elastic.co/downloads/elasticsearch/$(ES_RPM)
	$(QUIET)$(SUDO) dnf localinstall $(ES_RPM)

remove.esrpm:
	$(QUIET)$(SUDO) dnf remove elasticsearch

# macOS aarch64
install.esmac:
	$(QUIET) curl -O https://artifacts.elastic.co/downloads/elasticsearch/$(ES_MAC)
	$(QUIET) curl https://artifacts.elastic.co/downloads/elasticsearch/$(ES_MAC).sha512 | shasum -a 512 -c -
	$(QUIET) tar -xzf $(ES_MAC)

remove.esmac:
	$(QUIET) rm -rf $(ES_FILE)*

enable.es:
	$(QUIET)$(SUDO) systemctl daemon-reload
	$(QUIET)$(SUDO) systemctl enable elasticsearch.service

start.es:
	$(QUIET)$(SUDO) systemctl start elasticsearch.service

status.es:	
	$(QUIET)systemctl status -l elasticsearch.service | cat -b

stop.es:	
	$(QUIET)systemctl stop elasticsearch.service

disable.es:	
	$(QUIET)systemctl disable elasticsearch.service

restart.es:
	$(QUIET)$(SUDO) systemctl restart elasticsearch.service

## Create the ES indexes and set up their mapping
mapping:
	$(QUIET)bash $(TOP)/scripts/cf_es_configuration.bash mapping

## Clean all ES indexes and their mapping
mapping.clean:
	$(QUIET)bash $(TOP)/scripts/cf_es_configuration.bash mappingClean

mapping.verify:
	$(QUIET)bash $(TOP)/scripts/cf_es_configuration.bash mappingVerify

mapping.settings:
	$(QUIET)curl -XPUT "http://$(ES_HOST):$(ES_PORT)/channelfinder/_settings" -d '{ "index" : { "max_result_window" : $(CF_QUERY_SIZE) } }' -H "Content-Type: application/jsoin"
	$(QUIET)curl -XPUT "http://$(ES_HOST):$(ES_PORT)/cf_properties/_settings" -d '{ "index" : { "max_result_window" : $(CF_QUERY_SIZE) } }' -H "Content-Type: application/json"
	$(QUIET)curl -XPUT "http://$(ES_HOST):$(ES_PORT)/cf_tags/_settings" -d '{ "index" : { "max_result_window" : $(CF_QUERY_SIZE) } }' -H "Content-Type: application/json"

