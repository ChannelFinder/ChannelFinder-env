#
.DEFAULT_GOAL := help

.PHONY: help default init distclean deinit

# # help is defined in 
# # https://gist.github.com/rcmachado/af3db315e31383502660
help:
	$(info --------------------------------------- )	
	$(info Make Targets)
	$(info --------------------------------------- )
	$(QUIET) awk '/^[a-zA-Z\-\_0-9]+:/ {            \
	  nb = sub( /^## /, "", helpMsg );              \
	  if(nb == 0) {                                 \
	    helpMsg = $$0;                              \
	    nb = sub( /^[^:]*:.* ## /, "", helpMsg );   \
	  }                                             \
	  if (nb)                                       \
	    print  $$1 "\t" helpMsg;                    \
	}                                               \
	{ helpMsg = $$0 }'                              \
	$(MAKEFILE_LIST) | column -ts:


default: help


## Clone Source
init:
ifeq "$(INIT_SRC)" "1"
	git clone $(CF_SRC_GITURL) $(CF_SRC_PATH)
	cd $(CF_SRC_PATH) && git checkout $(CF_SRC_TAG)
else
	$(QUIET)echo "$(SRC_PATH) exists. make distclean first, if one would like to restart it."
endif

deinit: distclean
## Clean Source
distclean:
ifneq ($(wildcard $(CF_SRC_PATH)/.*),)
	$(QUIET)echo "We've found $(SRC_PATH)"
	$(QUIET)echo "Removing ....."
	$(QUIET)rm -rf $(CF_SRC_PATH)
else
	$(QUIET)echo "There is no $(SRC_PATH)."
endif


.PHONY: build conf

## Build Source
build: 
	$(QUIET)mvn -f $(CF_SRC_PATH)/pom.xml clean install

## Copy the site specific files into sources
conf:
	$(QUIET)sed -e "s:@CF_SSHKEY@:$(CF_SSHKEY):g" -e "s:@CF_SSHKEYALIAS@:$(CF_SSHKEYALIAS):g" -e "s:@CF_LDIF@:$(CF_LDIF):g" -e "s:@CF_PORT@:$(CF_PORT):g" < $(CF_SITE_TEMPLATE_PATH)/application.properties.in > $(CF_SITE_TEMPLATE_PATH)/application.properties
	$(QUIET)cp $(CF_SITE_TEMPLATE_PATH)/$(CF_LDIF)     $(CF_SITE_SPECIFIC_FILES_PATH)/
	$(QUIET)cp $(CF_SITE_TEMPLATE_PATH)/$(CF_SSHKEY)     $(CF_SITE_SPECIFIC_FILES_PATH)/keystore/
	$(QUIET)cp $(CF_SITE_TEMPLATE_PATH)/application.properties $(CF_SITE_SPECIFIC_FILES_PATH)/
